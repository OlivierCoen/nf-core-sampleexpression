nextflow_process {

    name "Test Process IDMAPPING_MAPTONCBI"
    script "../main.nf"
    process "IDMAPPING_MAPTONCBI"

    test("id mapping ") {

        when {
            process {
                """

                expression_test_data_dir = params.modules_testdata_base_path + 'genomics/mus_musculus/rnaseq_expression/'

                ch_counts = Channel.fromPath(file(expression_test_data_dir + SRP254919.salmon.merged.gene_counts.top1000cov.tsv', checkIfExists: true)

                # modifying input file before launching test
                def rows = ch_counts.splitCsv(sep: '\t')

                def modifiedFile = file('modified_count_file.tsv').newPrintWriter()
                rows.eachWithIndex { row, index ->
                    if (index == 0) {
                        row[0] = 'gene_names'  // renaming first column
                    }
                    outFile.println(row[0..0] + row[2..-1])  // remove second column
                }
                modifiedFile.close()

                input[0] = modifiedFile
                input[1] = "Mus musculus"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path("${process.out.index[0]}").exists() },
                { assert path(process.out.log[0][1]).text.contains("No index available") },
                { assert snapshot(process.out.versions).match() }
            )
        }
    }

}
